<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- 
		Configure Spring Security 
	-->
	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-page="/app/login" login-processing-url="/app/j_spring_security_check" 
			default-target-url="/app/home" authentication-failure-url="/app/login?login_error=1" />
		<security:logout logout-url="/app/logout" logout-success-url="/app/home" />
		<security:intercept-url pattern="/secured/appleUser" method="POST" access="hasRole('ROLE_APPLE_USER')" />
		<security:intercept-url pattern="/secured/androidUser" method="POST" access="hasRole('ROLE_ANDROID_USER')" />
	</security:http>

	<!--
		Define local authentication provider, a real app would use an external provider (JDBC, LDAP, CAS, etc)
		
		usernames/passwords are:
			joe/joe1
			pete/pete1
	-->
    <import resource="appServlet/jdbc-beans.xml"/>
    <!-- konfiguracja poÅ‚acznia z baza przez plik properties -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/spring/properties/jdbc_mysql.properties" />
	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="md5" />
                <security:jdbc-user-service data-source-ref="dataSource"
                 users-by-username-query="SELECT username, password, 'true' as enabled FROM springdb.users WHERE username = ?"
                 authorities-by-username-query="SELECT u.username, ROLE FROM springdb.users u, springdb.user_roles a WHERE u.username = a.username AND u.username = ?"
                        />
		</security:authentication-provider>
	</security:authentication-manager>	

</beans>